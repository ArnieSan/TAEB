#!/usr/bin/env perl
use strict;
use warnings;
use lib 'lib';

use Curses;

BEGIN {
    eval { require TAEB; 1 };
    if ($@) {
        if ($@ =~ /Can't locate TAEB\.pm/) {
            die "You must run TAEB from the top-level directory. (run `cd ..`)";
        }
        die $@;
    }
}

# load configured subsystems {{{
my $ai_class = TAEB->config->ai
    or die "Specify a class for 'ai' in your config";
Class::MOP::load_class($ai_class);
TAEB->ai($ai_class->new);


my $interface = TAEB->config->interface
    or die "Specify a class for 'interface' in your config";
my $interface_class = $interface =~ s/^\+//
                    ? $interface
                    : "TAEB::Interface::$interface";
Class::MOP::load_class($interface_class);

my %interface_options = %{ TAEB->config->interface_options->{$interface} || {} };
TAEB->interface($interface_class->new(%interface_options));
# }}}
# signal and terminal munging {{{
$SIG{__WARN__} = sub {
    my $method = $_[0] =~ /^Use of uninitialized / ? 'undef' : 'perl';
    TAEB->log->$method($_[0], level => 'warning');
};
$SIG{__DIE__} = sub {
    require Carp::REPL;
    print "\ec";
    warn "@_";
    Carp::REPL::repl(@_);
} if TAEB->config->carp_repl;

# error-log any deaths
my $old_sigdie = $SIG{__DIE__};
$SIG{__DIE__} = sub {

    TAEB->save_state;

    unless ("@_" =~ /Game over, man|See you soon|Until we meet again/) {
        TAEB->log->perl($_[0], level => 'error');
        TAEB->save;
        endwin;
        $old_sigdie->(@_) if ref($old_sigdie) eq 'CODE';
    }

    endwin;
    die @_;
};

my $tstp = $SIG{TSTP} = sub {
    # if we don't invoke TSTP then we won't be suspended
    $SIG{TSTP} = 'DEFAULT';

    def_prog_mode();
    endwin();

    kill TSTP => $$;
};

$SIG{CONT} = sub {
    $SIG{TSTP} = $tstp;

    TAEB->redraw(force_clear => 1);
};

$TAEB::ToScreen = 1;
$| = 1;

initscr;
END { endwin }
noecho;
cbreak;
start_color;
use_default_colors;
init_pair($_, $_, 0) for 0 .. 7;

$SIG{INT} = sub { TAEB->save };

# }}}

addstr "Loading TAEB...";

while (1) {
    TAEB->iterate;
}

