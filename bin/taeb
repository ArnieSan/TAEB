#!/usr/bin/env perl
use strict;
use warnings;
use lib 'lib';
use TAEB;
use Curses;
use List::Util qw/max/;

TAEB->setup_handlers;

my $loop = grep { $_ eq '--loop' } @ARGV;

my $tstp = $SIG{TSTP} = sub {
    # if we don't invoke TSTP then we won't be suspended
    $SIG{TSTP} = 'DEFAULT';

    def_prog_mode();
    endwin();

    kill TSTP => $$;
};

$SIG{CONT} = sub {
    $SIG{TSTP} = $tstp;

    TAEB->redraw(force_clear => 1);
};

$TAEB::ToScreen = 1;
$| = 1;

initscr;
END { endwin }
noecho;
cbreak;
start_color;
use_default_colors;
init_pair($_, $_, 0) for 0 .. 7;

while (1) {
    clear;
    refresh;

    addstr "Loading TAEB...";

    eval {
        local $SIG{INT} = sub { TAEB->save; $loop = 0 };
        TAEB->play;
    };

    last unless $loop;
    endwin;

    TAEB->reset_state;
    logrotate();

    sleep 5;
}

sub logrotate {
    my $cfg = TAEB::Config->log_rotation || {};

    return unless $cfg->{enabled};
    my $max_logs = $cfg->{max_logs} || 10e999;

    mkdir("logs");
    my @logs = map { m#^logs/(?:\w+)\.([0-9]+)\.log\.(?:bz2|gz)# ? [$1, $_] : () }
        glob "logs/*";

    my $head = max -1, map { $_->[0] } @logs;  #highest used log index

    unlink map { $_->[1] } grep { $_->[0] <= $head - $max_logs + 1 } @logs;

    for (glob "log/*") {
        s{^log/(.*)\.log}{$1};
        my $dest = sprintf "logs/$_.%05d.log.gz", $head + 1;
        print "gzipping $dest...";
        system("gzip -9 < log/$_.log > $dest");
        print "done\n";
    }
}
