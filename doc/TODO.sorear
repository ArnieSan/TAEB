- Explore optimization (taken by doy?)

  - Track what squares need to be explored, only run Explore if there are any

  - Should give -1 pathfind during boring ops (CurseCheck most notably)

  - Pathfind cache as described below removes the need for this


- Special room improvement

  - When we enter a special room, pick a tile that is clearly inside

  - Radiate out in cardinal directions

  - If we hit a doorway or a wall, edge of room

  - Repeat every couple dozen turns

  - Will fix priest whack bug (priest stands outside temple area)

  - But monster tracking would fix it better



- Smarter searching (mostly done)

  - Should move code into T:A:B:Search for performance/factoring

  - Don't search walls we can path around (requires getting the whole tree
    from dijkstra)


- Armour swapping

  - It's just a pathfinding problem.  Vertices are 53-bit strings representing
    which items are worn... try to find the "best" reachable state.

  - If you are at the best reachable state, drop unworn armour

  - Pick up armour if you are at the best reachable state, but wouldn't be if
    you had this in inventory (hence 53).  Works best if UpgradeArmour >
    GetItems.


- Pathfind cache

  - The path-finding methods take two extra arguments - an identifier (usually
    a glob) and a cookie

    - You agree that your predicate depends only on the map and the cookie

  - The pathfind module keeps a hash of identifier -> path

  - A path will be reused if it is less than 200 turns old, the cookie is the
    same, and no part of the map has changed

  - Usable by GetItems (cookie = interesting coord list), Explore, GotoTile;
    these will very rarely pathfind (except Explore, which will make many
    short pathfinds, but only while active)

  - Not usable by Melee and Search


- When we do a pathfind, tile costs are partly determined by personality
  (behavior dispatch)  (not really useful without the second)

  - This would of course be ludicrously expensive

  - Solution: make travel_cost an _attribute_ of tiles, which invalidate
    when certain big things happen (e.g. PickaxeFinder gets a pick axe)

  - Logical granularities are one tile (after every update), one map
    (this is a non-dig level), one dungeon (use sparingly, probably best
    to defer it on a level-by-level basis)

  - Helps with water, etc


- Improve special level detection


- Behaviors can override actions (taken by doy?)

    - PickaxeFinder subs 'a'pplications for attempts to walk into rock

    - LevitateOverWater

    - DigAroundTraps

    - Doors could go here, if it's not better to leave them all open

    - doy suggests Melee will reject attempts to eat rations, replacing
      them with combat for corpses

  - Proposed implementation

    - After a behavior does an action, go through the list of behaviors again
      in reverse priority order and see if anybody wants a substitution?

    - Or do normal priority order and only allow one hook (simpler, I
      more or less understand the ramifications)
